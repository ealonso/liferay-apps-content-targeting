<?xml version="1.0"?>
<!DOCTYPE project>

<project xmlns:antelope="antlib:ise.antelope.tasks" xmlns:sonar="antlib:org.sonar.ant">
	<import file="../../build-common-plugins.xml" />

	<property file="sonar.${user.name}.properties" />
	<property file="sonar.${env.COMPUTERNAME}.properties" />
	<property file="sonar.${env.HOST}.properties" />
	<property file="sonar.${env.HOSTNAME}.properties" />
	<property file="sonar.properties" />

	<macrodef name="consolidate-test">
		<attribute name="module.dir" />

		<sequential>
			<copy todir="@{module.dir}/test-results" failonerror="false">
				<fileset dir="@{module.dir}/test-results/integration" />
				<fileset dir="@{module.dir}/test-results/unit" />
			</copy>

			<merge-coverage module.dir="@{module.dir}" />
		</sequential>
	</macrodef>

	<target name="consolidate-tests">
		<path id="app.core.path">
			<dirset dir="${sdk.dir}/apps/content-targeting" excludes="*-test" includes="*" />
		</path>

		<pathconvert pathsep="," property="app.core.path" refid="app.core.path" targetos="unix" />

		<loop-macrodef-or-target module.dirs="${app.core.path}" target.name="consolidate-test" />
	</target>

	<target name="create-channel">
		<if>
			<or>
				<not>
					<isset property="channel.display.name" />
				</not>
				<not>
					<isset property="channel.name" />
				</not>
			</or>
			<then>
				<fail>This task must be called by the create_channel script.</fail>
			</then>
		</if>

		<property name="channel.parent.dir" value="${user.dir}" />
		<property name="channel.dir" value="${channel.parent.dir}/channel-${channel.name}" />

		<if>
			<available file="${channel.dir}" />
			<then>
				<fail>${channel.dir} already exists.</fail>
			</then>
		</if>

		<copy todir="${channel.dir}">
			<fileset dir="${user.dir}/tools/channel_tmpl" />
		</copy>

		<antelope:stringutil string="${channel.display.name}" property="channel.java.class.name">
			<antelope:replace regex="\s+" replacement="" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${channel.name}" property="channel.java.package.dir">
			<antelope:replace regex="-" replacement="/" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${channel.name}" property="channel.java.package.name">
			<antelope:replace regex="-" replacement="." />
			<antelope:trim/>
		</antelope:stringutil>

		<move
			file="${channel.dir}/src/com/liferay/content/targeting/channel/Channel.java"
			tofile="${channel.dir}/src/com/liferay/content/targeting/channel/${channel.java.package.dir}/${channel.java.class.name}Channel.java"
		/>

		<replace dir="${channel.dir}">
			<replacefilter token="@channel.display.name@" value="${channel.display.name}" />
			<replacefilter token="@channel.java.class.name@" value="${channel.java.class.name}" />
			<replacefilter token="@channel.java.package.name@" value="${channel.java.package.name}" />
			<replacefilter token="@channel.name@" value="${channel.name}" />
		</replace>
	</target>

	<target name="create-report">
		<if>
			<or>
				<not>
					<isset property="report.display.name" />
				</not>
				<not>
					<isset property="report.name" />
				</not>
			</or>
			<then>
				<fail>This task must be called by the create_report script.</fail>
			</then>
		</if>

		<property name="report.parent.dir" value="${user.dir}" />
		<property name="report.dir" value="${report.parent.dir}/report-${report.name}" />

		<if>
			<available file="${report.dir}" />
			<then>
				<fail>${report.dir} already exists.</fail>
			</then>
		</if>

		<copy todir="${report.dir}">
			<fileset dir="${user.dir}/tools/report_tmpl" />
		</copy>

		<antelope:stringutil string="${report.display.name}" property="report.java.class.name">
			<antelope:replace regex="\s+" replacement="" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${report.name}" property="report.java.package.dir">
			<antelope:replace regex="-" replacement="/" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${report.name}" property="report.java.package.name">
			<antelope:replace regex="-" replacement="." />
			<antelope:trim/>
		</antelope:stringutil>

		<move file="${report.dir}/src/com/liferay/content/targeting/report/Report.java" tofile="${report.dir}/src/com/liferay/content/targeting/report/${report.java.package.dir}/${report.java.class.name}Report.java" />

		<replace dir="${report.dir}">
			<replacefilter token="@report.display.name@" value="${report.display.name}" />
			<replacefilter token="@report.java.class.name@" value="${report.java.class.name}" />
			<replacefilter token="@report.java.package.name@" value="${report.java.package.name}" />
			<replacefilter token="@report.name@" value="${report.name}" />
		</replace>
	</target>

	<target name="create-rule">
		<if>
			<or>
				<not>
					<isset property="rule.display.name" />
				</not>
				<not>
					<isset property="rule.name" />
				</not>
			</or>
			<then>
				<fail>This task must be called by the create_rule script.</fail>
			</then>
		</if>

		<property name="rule.parent.dir" value="${user.dir}" />
		<property name="rule.dir" value="${rule.parent.dir}/rule-${rule.name}" />

		<if>
			<available file="${rule.dir}" />
			<then>
				<fail>${rule.dir} already exists.</fail>
			</then>
		</if>

		<copy todir="${rule.dir}">
			<fileset dir="${user.dir}/tools/rule_tmpl" />
		</copy>

		<antelope:stringutil string="${rule.display.name}" property="rule.java.class.name">
			<antelope:replace regex="\s+" replacement="" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${rule.name}" property="rule.java.package.dir">
			<antelope:replace regex="-" replacement="/" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${rule.name}" property="rule.java.package.name">
			<antelope:replace regex="-" replacement="." />
			<antelope:trim/>
		</antelope:stringutil>

		<move file="${rule.dir}/src/com/liferay/content/targeting/rule/Rule.java" tofile="${rule.dir}/src/com/liferay/content/targeting/rule/${rule.java.package.dir}/${rule.java.class.name}Rule.java" />

		<replace dir="${rule.dir}">
			<replacefilter token="@rule.display.name@" value="${rule.display.name}" />
			<replacefilter token="@rule.java.class.name@" value="${rule.java.class.name}" />
			<replacefilter token="@rule.java.package.name@" value="${rule.java.package.name}" />
			<replacefilter token="@rule.name@" value="${rule.name}" />
		</replace>
	</target>

	<target name="create-tracking-action">
		<if>
			<or>
				<not>
					<isset property="tracking.action.display.name" />
				</not>
				<not>
					<isset property="tracking.action.name" />
				</not>
			</or>
			<then>
				<fail>This task must be called by the create_tracking_action script.</fail>
			</then>
		</if>

		<property name="tracking.action.parent.dir" value="${user.dir}" />
		<property name="tracking.action.dir" value="${tracking.action.parent.dir}/tracking-action-${tracking.action.name}" />

		<if>
			<available file="${tracking.action.dir}" />
			<then>
				<fail>${tracking.action.dir} already exists.</fail>
			</then>
		</if>

		<copy todir="${tracking.action.dir}">
			<fileset dir="${user.dir}/tools/tracking_action_tmpl" />
		</copy>

		<antelope:stringutil string="${tracking.action.display.name}" property="tracking.action.java.class.name">
			<antelope:replace regex="\s+" replacement="" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${tracking.action.name}" property="tracking.action.java.package.dir">
			<antelope:replace regex="-" replacement="/" />
			<antelope:trim/>
		</antelope:stringutil>

		<antelope:stringutil string="${tracking.action.name}" property="tracking.action.java.package.name">
			<antelope:replace regex="-" replacement="." />
			<antelope:trim/>
		</antelope:stringutil>

		<move
			file="${tracking.action.dir}/src/com/liferay/content/targeting/tracking/action/TrackingAction.java"
			tofile="${tracking.action.dir}/src/com/liferay/content/targeting/tracking/action/${tracking.action.java.package.dir}/${tracking.action.java.class.name}TrackingAction.java"
		/>

		<replace dir="${tracking.action.dir}">
			<replacefilter token="@tracking.action.display.name@" value="${tracking.action.display.name}" />
			<replacefilter token="@tracking.action.java.class.name@" value="${tracking.action.java.class.name}" />
			<replacefilter token="@tracking.action.java.package.name@" value="${tracking.action.java.package.name}" />
			<replacefilter token="@tracking.action.name@" value="${tracking.action.name}" />
		</replace>
	</target>

	<target name="sonar">
		<taskdef resource="org/sonar/ant/antlib.xml" uri="antlib:org.sonar.ant">
			<classpath path="${sdk.dir}/dependencies/org.sonar.ant/lib/sonar-ant-task.jar" />
		</taskdef>

		<sonar:sonar/>
	</target>
</project>